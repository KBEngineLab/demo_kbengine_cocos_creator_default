/*
	Generated by KBEngine!
	Please do not modify this file!
	tools = kbcmd
*/


export class ServerErr {
	name: string;
	descr: string;
	id: number;
}


export class ServerErrorDescrs {
	public static serverErrs: Map<number, ServerErr> = new Map<number, ServerErr>();


	constructor() {

		{
            let e: ServerErr = new ServerErr();
            e.id = 0;
            e.name = "SUCCESS";
            e.descr = "成功。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 1;
            e.name = "SERVER_ERR_SRV_NO_READY";
            e.descr = "服务器没有准备好。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 2;
            e.name = "SERVER_ERR_SRV_OVERLOAD";
            e.descr = "服务器负载过重。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 3;
            e.name = "SERVER_ERR_ILLEGAL_LOGIN";
            e.descr = "非法登录。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 4;
            e.name = "SERVER_ERR_NAME_PASSWORD";
            e.descr = "用户名或者密码不正确。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 5;
            e.name = "SERVER_ERR_NAME";
            e.descr = "用户名不正确。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 6;
            e.name = "SERVER_ERR_PASSWORD";
            e.descr = "密码不正确。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 7;
            e.name = "SERVER_ERR_ACCOUNT_CREATE_FAILED";
            e.descr = "创建账号失败。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 8;
            e.name = "SERVER_ERR_BUSY";
            e.descr = "操作过于繁忙(例如：在服务器前一次请求未执行完毕的情况下连续N次创建账号)。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 9;
            e.name = "SERVER_ERR_ACCOUNT_LOGIN_ANOTHER";
            e.descr = "当前账号在另一处登录了。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 10;
            e.name = "SERVER_ERR_ACCOUNT_IS_ONLINE";
            e.descr = "账号已登陆。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 11;
            e.name = "SERVER_ERR_PROXY_DESTROYED";
            e.descr = "与客户端关联的proxy在服务器上已经销毁。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 12;
            e.name = "SERVER_ERR_ENTITYDEFS_NOT_MATCH";
            e.descr = "EntityDefs不匹配。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 13;
            e.name = "SERVER_ERR_SERVER_IN_SHUTTINGDOWN";
            e.descr = "服务器正在关闭中。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 14;
            e.name = "SERVER_ERR_NAME_MAIL";
            e.descr = "Email地址错误。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 15;
            e.name = "SERVER_ERR_ACCOUNT_LOCK";
            e.descr = "账号被冻结。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 16;
            e.name = "SERVER_ERR_ACCOUNT_DEADLINE";
            e.descr = "账号已过期。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 17;
            e.name = "SERVER_ERR_ACCOUNT_NOT_ACTIVATED";
            e.descr = "账号未激活。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 18;
            e.name = "SERVER_ERR_VERSION_NOT_MATCH";
            e.descr = "与服务端的版本不匹配。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 19;
            e.name = "SERVER_ERR_OP_FAILED";
            e.descr = "操作失败。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 20;
            e.name = "SERVER_ERR_SRV_STARTING";
            e.descr = "服务器正在启动中。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 21;
            e.name = "SERVER_ERR_ACCOUNT_REGISTER_NOT_AVAILABLE";
            e.descr = "未开放账号注册功能。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 22;
            e.name = "SERVER_ERR_CANNOT_USE_MAIL";
            e.descr = "不能使用email地址。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 23;
            e.name = "SERVER_ERR_NOT_FOUND_ACCOUNT";
            e.descr = "找不到此账号。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 24;
            e.name = "SERVER_ERR_DB";
            e.descr = "数据库错误(请检查dbmgr日志和DB)。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 25;
            e.name = "SERVER_ERR_USER1";
            e.descr = "用户自定义错误码1。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 26;
            e.name = "SERVER_ERR_USER2";
            e.descr = "用户自定义错误码2。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 27;
            e.name = "SERVER_ERR_USER3";
            e.descr = "用户自定义错误码3。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 28;
            e.name = "SERVER_ERR_USER4";
            e.descr = "用户自定义错误码4。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 29;
            e.name = "SERVER_ERR_USER5";
            e.descr = "用户自定义错误码5。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 30;
            e.name = "SERVER_ERR_USER6";
            e.descr = "用户自定义错误码6。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 31;
            e.name = "SERVER_ERR_USER7";
            e.descr = "用户自定义错误码7。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 32;
            e.name = "SERVER_ERR_USER8";
            e.descr = "用户自定义错误码8。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 33;
            e.name = "SERVER_ERR_USER9";
            e.descr = "用户自定义错误码9。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 34;
            e.name = "SERVER_ERR_USER10";
            e.descr = "用户自定义错误码10。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 35;
            e.name = "SERVER_ERR_LOCAL_PROCESSING";
            e.descr = "本地处理，通常为某件事情不由第三方处理而是由KBE服务器处理。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 36;
            e.name = "SERVER_ERR_ACCOUNT_RESET_PASSWORD_NOT_AVAILABLE";
            e.descr = "未开放账号重置密码功能。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

		{
            let e: ServerErr = new ServerErr();
            e.id = 37;
            e.name = "SERVER_ERR_ACCOUNT_LOGIN_ANOTHER_SERVER";
            e.descr = "当前账号在其他服务器登陆了。";
            ServerErrorDescrs.serverErrs.set(e.id, e);
        }

	}

	public Clear() {
		ServerErrorDescrs.serverErrs.clear();
	}

	public serverErrStr(id: number): string {
		let e: ServerErr | undefined = ServerErrorDescrs.serverErrs.get(id);
		if (!e) {
			return "";
		}

		return e.name + "[" + e.descr + "]";
	}

	public serverErr(id: number): ServerErr | undefined {
		let e: ServerErr | undefined = ServerErrorDescrs.serverErrs.get(id);
		return e;
	}
}
