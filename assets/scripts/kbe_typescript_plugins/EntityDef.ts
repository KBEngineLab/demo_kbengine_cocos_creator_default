/*
	Generated by KBEngine!
	Please do not modify this file!
	tools = kbcmd
*/


import { DataTypes , KBETypes } from "./KBEngine";
import { ScriptModule } from "./ScriptModule";
import { Vector3, Vector2 ,Vector4} from "./KBEMath";
import { Property } from "./Property";
import { Method } from "./Method";

export default class EntityDef {
    public static datatype2id: Map<string, number> = new Map();
    public static datatypes: Map<string, DataTypes.DATATYPE_BASE> = new Map();
    public static id2datatypes: Map<number, DataTypes.DATATYPE_BASE> = new Map();
    public static entityclass: Map<string, number> = new Map();
    public static moduledefs: Map<string, ScriptModule> = new Map();
    public static idmoduledefs: Map<number, ScriptModule> = new Map();


    public static init() {
        this.initDataTypes();
        this.initDefTypes();
        this.initScriptModules();
        return true;
    }

    public static reset() {
        this.clear();
        return this.init();
    }

    public static clear() {
        this.datatype2id.clear();
        this.datatypes.clear();
        this.id2datatypes.clear();
        this.entityclass.clear();
        this.moduledefs.clear();
        this.idmoduledefs.clear();
    }


    
    public static initDataTypes() {
        EntityDef.datatypes.set("UINT8", new DataTypes.DATATYPE_UINT8());
		EntityDef.datatypes.set("UINT16", new DataTypes.DATATYPE_UINT16());
		EntityDef.datatypes.set("UINT32", new DataTypes.DATATYPE_UINT32());
		EntityDef.datatypes.set("UINT64", new DataTypes.DATATYPE_UINT64());
		EntityDef.datatypes.set("INT8", new DataTypes.DATATYPE_INT8());
		EntityDef.datatypes.set("INT16", new DataTypes.DATATYPE_INT16());
		EntityDef.datatypes.set("INT32", new DataTypes.DATATYPE_INT32());
		EntityDef.datatypes.set("INT64", new DataTypes.DATATYPE_INT64());
		EntityDef.datatypes.set("FLOAT", new DataTypes.DATATYPE_FLOAT());
		EntityDef.datatypes.set("DOUBLE", new DataTypes.DATATYPE_DOUBLE());
		EntityDef.datatypes.set("STRING", new DataTypes.DATATYPE_STRING());
		EntityDef.datatypes.set("VECTOR2", new DataTypes.DATATYPE_VECTOR2());
		EntityDef.datatypes.set("VECTOR3", new DataTypes.DATATYPE_VECTOR3());
		EntityDef.datatypes.set("VECTOR4", new DataTypes.DATATYPE_VECTOR4());
		EntityDef.datatypes.set("PYTHON", new DataTypes.DATATYPE_PYTHON());
		EntityDef.datatypes.set("UNICODE", new DataTypes.DATATYPE_UNICODE());
		EntityDef.datatypes.set("ENTITYCALL", new DataTypes.DATATYPE_ENTITYCALL());
		EntityDef.datatypes.set("BLOB", new DataTypes.DATATYPE_BLOB());
    }

	public static  initScriptModules(){
		let pAccountModule = new ScriptModule("Account");
		EntityDef.moduledefs["Account"] = pAccountModule;
		EntityDef.idmoduledefs[1] = pAccountModule;

		let pAccount_position = new Property();
		pAccount_position.name = "position";
		pAccount_position.properUtype = 40000;
		pAccount_position.properFlags = 4;
		pAccount_position.aliasID = 1;
		let Account_position_defval = new Vector3();
		pAccount_position.defaultValStr = Account_position_defval;
		pAccountModule.propertys["position"] = pAccount_position; 

		pAccountModule.usePropertyDescrAlias = true;
		pAccountModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAccount_position.aliasID)] = pAccount_position;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Account), property(position / 40000).");

		let pAccount_direction = new Property();
		pAccount_direction.name = "direction";
		pAccount_direction.properUtype = 40001;
		pAccount_direction.properFlags = 4;
		pAccount_direction.aliasID = 2;
		let Account_direction_defval = new Vector3();
		pAccount_direction.defaultValStr = Account_direction_defval;
		pAccountModule.propertys["direction"] = pAccount_direction; 

		pAccountModule.usePropertyDescrAlias = true;
		pAccountModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAccount_direction.aliasID)] = pAccount_direction;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Account), property(direction / 40001).");

		let pAccount_spaceID = new Property();
		pAccount_spaceID.name = "spaceID";
		pAccount_spaceID.properUtype = 40002;
		pAccount_spaceID.properFlags = 16;
		pAccount_spaceID.aliasID = 3;
		let Account_spaceID_defval:number = Number("");
		pAccount_spaceID.defaultValStr = Account_spaceID_defval;
		pAccountModule.propertys["spaceID"] = pAccount_spaceID; 

		pAccountModule.usePropertyDescrAlias = true;
		pAccountModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAccount_spaceID.aliasID)] = pAccount_spaceID;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Account), property(spaceID / 40002).");

		let pAccount_lastSelCharacter = new Property();
		pAccount_lastSelCharacter.name = "lastSelCharacter";
		pAccount_lastSelCharacter.properUtype = 2;
		pAccount_lastSelCharacter.properFlags = 32;
		pAccount_lastSelCharacter.aliasID = 4;
		let Account_lastSelCharacter_defval:bigint = BigInt("0");
		pAccount_lastSelCharacter.defaultValStr = Account_lastSelCharacter_defval;
		pAccountModule.propertys["lastSelCharacter"] = pAccount_lastSelCharacter; 

		pAccountModule.usePropertyDescrAlias = true;
		pAccountModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAccount_lastSelCharacter.aliasID)] = pAccount_lastSelCharacter;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Account), property(lastSelCharacter / 2).");

		let pAccount_onCreateAvatarResult_args = new Array<DataTypes.DATATYPE_BASE>();
		pAccount_onCreateAvatarResult_args.push(EntityDef.id2datatypes[2]);
		pAccount_onCreateAvatarResult_args.push(EntityDef.id2datatypes[25]);

		let pAccount_onCreateAvatarResult = new Method();
		pAccount_onCreateAvatarResult.name = "onCreateAvatarResult";
		pAccount_onCreateAvatarResult.methodUtype = 10005;
		pAccount_onCreateAvatarResult.aliasID = 1;
		pAccount_onCreateAvatarResult.args = pAccount_onCreateAvatarResult_args;

		pAccountModule.methods["onCreateAvatarResult"] = pAccount_onCreateAvatarResult; 
		pAccountModule.useMethodDescrAlias = true;
		pAccountModule.idmethods[DataTypes.NumberUtil.toUInt16(pAccount_onCreateAvatarResult.aliasID)] = pAccount_onCreateAvatarResult; // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Account), method(onCreateAvatarResult / 10005).");

		let pAccount_onRemoveAvatar_args = new Array<DataTypes.DATATYPE_BASE>();
		pAccount_onRemoveAvatar_args.push(EntityDef.id2datatypes[5]);

		let pAccount_onRemoveAvatar = new Method();
		pAccount_onRemoveAvatar.name = "onRemoveAvatar";
		pAccount_onRemoveAvatar.methodUtype = 3;
		pAccount_onRemoveAvatar.aliasID = 2;
		pAccount_onRemoveAvatar.args = pAccount_onRemoveAvatar_args;

		pAccountModule.methods["onRemoveAvatar"] = pAccount_onRemoveAvatar; 
		pAccountModule.useMethodDescrAlias = true;
		pAccountModule.idmethods[DataTypes.NumberUtil.toUInt16(pAccount_onRemoveAvatar.aliasID)] = pAccount_onRemoveAvatar; // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Account), method(onRemoveAvatar / 3).");

		let pAccount_onReqAvatarList_args = new Array<DataTypes.DATATYPE_BASE>();
		pAccount_onReqAvatarList_args.push(EntityDef.id2datatypes[26]);

		let pAccount_onReqAvatarList = new Method();
		pAccount_onReqAvatarList.name = "onReqAvatarList";
		pAccount_onReqAvatarList.methodUtype = 10003;
		pAccount_onReqAvatarList.aliasID = 3;
		pAccount_onReqAvatarList.args = pAccount_onReqAvatarList_args;

		pAccountModule.methods["onReqAvatarList"] = pAccount_onReqAvatarList; 
		pAccountModule.useMethodDescrAlias = true;
		pAccountModule.idmethods[DataTypes.NumberUtil.toUInt16(pAccount_onReqAvatarList.aliasID)] = pAccount_onReqAvatarList; // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Account), method(onReqAvatarList / 10003).");

		let pAccount_reqAvatarList_args = new Array<DataTypes.DATATYPE_BASE>();

		let pAccount_reqAvatarList = new Method();
		pAccount_reqAvatarList.name = "reqAvatarList";
		pAccount_reqAvatarList.methodUtype = 10001;
		pAccount_reqAvatarList.aliasID = -1;
		pAccount_reqAvatarList.args = pAccount_reqAvatarList_args;

		pAccountModule.methods["reqAvatarList"] = pAccount_reqAvatarList; 
		pAccountModule.baseMethods["reqAvatarList"] = pAccount_reqAvatarList;

		pAccountModule.idbaseMethods[pAccount_reqAvatarList.methodUtype] = pAccount_reqAvatarList;

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Account), method(reqAvatarList / 10001).");

		let pAccount_reqCreateAvatar_args = new Array<DataTypes.DATATYPE_BASE>();
		pAccount_reqCreateAvatar_args.push(EntityDef.id2datatypes[2]);
		pAccount_reqCreateAvatar_args.push(EntityDef.id2datatypes[12]);

		let pAccount_reqCreateAvatar = new Method();
		pAccount_reqCreateAvatar.name = "reqCreateAvatar";
		pAccount_reqCreateAvatar.methodUtype = 10002;
		pAccount_reqCreateAvatar.aliasID = -1;
		pAccount_reqCreateAvatar.args = pAccount_reqCreateAvatar_args;

		pAccountModule.methods["reqCreateAvatar"] = pAccount_reqCreateAvatar; 
		pAccountModule.baseMethods["reqCreateAvatar"] = pAccount_reqCreateAvatar;

		pAccountModule.idbaseMethods[pAccount_reqCreateAvatar.methodUtype] = pAccount_reqCreateAvatar;

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Account), method(reqCreateAvatar / 10002).");

		let pAccount_reqRemoveAvatar_args = new Array<DataTypes.DATATYPE_BASE>();
		pAccount_reqRemoveAvatar_args.push(EntityDef.id2datatypes[12]);

		let pAccount_reqRemoveAvatar = new Method();
		pAccount_reqRemoveAvatar.name = "reqRemoveAvatar";
		pAccount_reqRemoveAvatar.methodUtype = 1;
		pAccount_reqRemoveAvatar.aliasID = -1;
		pAccount_reqRemoveAvatar.args = pAccount_reqRemoveAvatar_args;

		pAccountModule.methods["reqRemoveAvatar"] = pAccount_reqRemoveAvatar; 
		pAccountModule.baseMethods["reqRemoveAvatar"] = pAccount_reqRemoveAvatar;

		pAccountModule.idbaseMethods[pAccount_reqRemoveAvatar.methodUtype] = pAccount_reqRemoveAvatar;

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Account), method(reqRemoveAvatar / 1).");

		let pAccount_reqRemoveAvatarDBID_args = new Array<DataTypes.DATATYPE_BASE>();
		pAccount_reqRemoveAvatarDBID_args.push(EntityDef.id2datatypes[5]);

		let pAccount_reqRemoveAvatarDBID = new Method();
		pAccount_reqRemoveAvatarDBID.name = "reqRemoveAvatarDBID";
		pAccount_reqRemoveAvatarDBID.methodUtype = 2;
		pAccount_reqRemoveAvatarDBID.aliasID = -1;
		pAccount_reqRemoveAvatarDBID.args = pAccount_reqRemoveAvatarDBID_args;

		pAccountModule.methods["reqRemoveAvatarDBID"] = pAccount_reqRemoveAvatarDBID; 
		pAccountModule.baseMethods["reqRemoveAvatarDBID"] = pAccount_reqRemoveAvatarDBID;

		pAccountModule.idbaseMethods[pAccount_reqRemoveAvatarDBID.methodUtype] = pAccount_reqRemoveAvatarDBID;

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Account), method(reqRemoveAvatarDBID / 2).");

		let pAccount_selectAvatarGame_args = new Array<DataTypes.DATATYPE_BASE>();
		pAccount_selectAvatarGame_args.push(EntityDef.id2datatypes[5]);

		let pAccount_selectAvatarGame = new Method();
		pAccount_selectAvatarGame.name = "selectAvatarGame";
		pAccount_selectAvatarGame.methodUtype = 10004;
		pAccount_selectAvatarGame.aliasID = -1;
		pAccount_selectAvatarGame.args = pAccount_selectAvatarGame_args;

		pAccountModule.methods["selectAvatarGame"] = pAccount_selectAvatarGame; 
		pAccountModule.baseMethods["selectAvatarGame"] = pAccount_selectAvatarGame;

		pAccountModule.idbaseMethods[pAccount_selectAvatarGame.methodUtype] = pAccount_selectAvatarGame;

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Account), method(selectAvatarGame / 10004).");

		let pAvatarModule = new ScriptModule("Avatar");
		EntityDef.moduledefs["Avatar"] = pAvatarModule;
		EntityDef.idmoduledefs[2] = pAvatarModule;

		let pAvatar_position = new Property();
		pAvatar_position.name = "position";
		pAvatar_position.properUtype = 40000;
		pAvatar_position.properFlags = 4;
		pAvatar_position.aliasID = 1;
		let Avatar_position_defval = new Vector3();
		pAvatar_position.defaultValStr = Avatar_position_defval;
		pAvatarModule.propertys["position"] = pAvatar_position; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_position.aliasID)] = pAvatar_position;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(position / 40000).");

		let pAvatar_direction = new Property();
		pAvatar_direction.name = "direction";
		pAvatar_direction.properUtype = 40001;
		pAvatar_direction.properFlags = 4;
		pAvatar_direction.aliasID = 2;
		let Avatar_direction_defval = new Vector3();
		pAvatar_direction.defaultValStr = Avatar_direction_defval;
		pAvatarModule.propertys["direction"] = pAvatar_direction; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_direction.aliasID)] = pAvatar_direction;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(direction / 40001).");

		let pAvatar_spaceID = new Property();
		pAvatar_spaceID.name = "spaceID";
		pAvatar_spaceID.properUtype = 40002;
		pAvatar_spaceID.properFlags = 16;
		pAvatar_spaceID.aliasID = 3;
		let Avatar_spaceID_defval:number = Number("");
		pAvatar_spaceID.defaultValStr = Avatar_spaceID_defval;
		pAvatarModule.propertys["spaceID"] = pAvatar_spaceID; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_spaceID.aliasID)] = pAvatar_spaceID;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(spaceID / 40002).");

		let pAvatar_HP = new Property();
		pAvatar_HP.name = "HP";
		pAvatar_HP.properUtype = 47001;
		pAvatar_HP.properFlags = 4;
		pAvatar_HP.aliasID = 4;
		let Avatar_HP_defval:number = Number("0");
		pAvatar_HP.defaultValStr = Avatar_HP_defval;
		pAvatarModule.propertys["HP"] = pAvatar_HP; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_HP.aliasID)] = pAvatar_HP;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(HP / 47001).");

		let pAvatar_HP_Max = new Property();
		pAvatar_HP_Max.name = "HP_Max";
		pAvatar_HP_Max.properUtype = 47002;
		pAvatar_HP_Max.properFlags = 4;
		pAvatar_HP_Max.aliasID = 5;
		let Avatar_HP_Max_defval:number = Number("0");
		pAvatar_HP_Max.defaultValStr = Avatar_HP_Max_defval;
		pAvatarModule.propertys["HP_Max"] = pAvatar_HP_Max; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_HP_Max.aliasID)] = pAvatar_HP_Max;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(HP_Max / 47002).");

		let pAvatar_MP = new Property();
		pAvatar_MP.name = "MP";
		pAvatar_MP.properUtype = 47003;
		pAvatar_MP.properFlags = 4;
		pAvatar_MP.aliasID = 6;
		let Avatar_MP_defval:number = Number("0");
		pAvatar_MP.defaultValStr = Avatar_MP_defval;
		pAvatarModule.propertys["MP"] = pAvatar_MP; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_MP.aliasID)] = pAvatar_MP;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(MP / 47003).");

		let pAvatar_MP_Max = new Property();
		pAvatar_MP_Max.name = "MP_Max";
		pAvatar_MP_Max.properUtype = 47004;
		pAvatar_MP_Max.properFlags = 4;
		pAvatar_MP_Max.aliasID = 7;
		let Avatar_MP_Max_defval:number = Number("0");
		pAvatar_MP_Max.defaultValStr = Avatar_MP_Max_defval;
		pAvatarModule.propertys["MP_Max"] = pAvatar_MP_Max; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_MP_Max.aliasID)] = pAvatar_MP_Max;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(MP_Max / 47004).");

		let pAvatar_component1 = new Property();
		pAvatar_component1.name = "component1";
		pAvatar_component1.properUtype = 16;
		pAvatar_component1.properFlags = 253;
		pAvatar_component1.aliasID = 8;
		pAvatarModule.propertys["component1"] = pAvatar_component1; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_component1.aliasID)] = pAvatar_component1;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(component1 / 16).");

		let pAvatar_component2 = new Property();
		pAvatar_component2.name = "component2";
		pAvatar_component2.properUtype = 21;
		pAvatar_component2.properFlags = 97;
		pAvatar_component2.aliasID = 9;
		pAvatarModule.propertys["component2"] = pAvatar_component2; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_component2.aliasID)] = pAvatar_component2;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(component2 / 21).");

		let pAvatar_component3 = new Property();
		pAvatar_component3.name = "component3";
		pAvatar_component3.properUtype = 22;
		pAvatar_component3.properFlags = 157;
		pAvatar_component3.aliasID = 10;
		pAvatarModule.propertys["component3"] = pAvatar_component3; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_component3.aliasID)] = pAvatar_component3;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(component3 / 22).");

		let pAvatar_forbids = new Property();
		pAvatar_forbids.name = "forbids";
		pAvatar_forbids.properUtype = 47005;
		pAvatar_forbids.properFlags = 4;
		pAvatar_forbids.aliasID = 11;
		let Avatar_forbids_defval:number = Number("0");
		pAvatar_forbids.defaultValStr = Avatar_forbids_defval;
		pAvatarModule.propertys["forbids"] = pAvatar_forbids; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_forbids.aliasID)] = pAvatar_forbids;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(forbids / 47005).");

		let pAvatar_level = new Property();
		pAvatar_level.name = "level";
		pAvatar_level.properUtype = 41002;
		pAvatar_level.properFlags = 8;
		pAvatar_level.aliasID = 12;
		let Avatar_level_defval:number = Number("");
		pAvatar_level.defaultValStr = Avatar_level_defval;
		pAvatarModule.propertys["level"] = pAvatar_level; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_level.aliasID)] = pAvatar_level;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(level / 41002).");

		let pAvatar_modelID = new Property();
		pAvatar_modelID.name = "modelID";
		pAvatar_modelID.properUtype = 41006;
		pAvatar_modelID.properFlags = 4;
		pAvatar_modelID.aliasID = 13;
		let Avatar_modelID_defval:number = Number("0");
		pAvatar_modelID.defaultValStr = Avatar_modelID_defval;
		pAvatarModule.propertys["modelID"] = pAvatar_modelID; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_modelID.aliasID)] = pAvatar_modelID;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(modelID / 41006).");

		let pAvatar_modelScale = new Property();
		pAvatar_modelScale.name = "modelScale";
		pAvatar_modelScale.properUtype = 41007;
		pAvatar_modelScale.properFlags = 4;
		pAvatar_modelScale.aliasID = 14;
		let Avatar_modelScale_defval:number = Number("30");
		pAvatar_modelScale.defaultValStr = Avatar_modelScale_defval;
		pAvatarModule.propertys["modelScale"] = pAvatar_modelScale; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_modelScale.aliasID)] = pAvatar_modelScale;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(modelScale / 41007).");

		let pAvatar_moveSpeed = new Property();
		pAvatar_moveSpeed.name = "moveSpeed";
		pAvatar_moveSpeed.properUtype = 11;
		pAvatar_moveSpeed.properFlags = 4;
		pAvatar_moveSpeed.aliasID = 15;
		let Avatar_moveSpeed_defval:number = Number("50");
		pAvatar_moveSpeed.defaultValStr = Avatar_moveSpeed_defval;
		pAvatarModule.propertys["moveSpeed"] = pAvatar_moveSpeed; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_moveSpeed.aliasID)] = pAvatar_moveSpeed;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(moveSpeed / 11).");

		let pAvatar_name = new Property();
		pAvatar_name.name = "name";
		pAvatar_name.properUtype = 41003;
		pAvatar_name.properFlags = 4;
		pAvatar_name.aliasID = 16;
		let Avatar_name_defval = "";
		pAvatar_name.defaultValStr = Avatar_name_defval;
		pAvatarModule.propertys["name"] = pAvatar_name; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_name.aliasID)] = pAvatar_name;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(name / 41003).");

		let pAvatar_own_val = new Property();
		pAvatar_own_val.name = "own_val";
		pAvatar_own_val.properUtype = 6;
		pAvatar_own_val.properFlags = 16;
		pAvatar_own_val.aliasID = 17;
		let Avatar_own_val_defval:number = Number("");
		pAvatar_own_val.defaultValStr = Avatar_own_val_defval;
		pAvatarModule.propertys["own_val"] = pAvatar_own_val; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_own_val.aliasID)] = pAvatar_own_val;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(own_val / 6).");

		let pAvatar_spaceUType = new Property();
		pAvatar_spaceUType.name = "spaceUType";
		pAvatar_spaceUType.properUtype = 41001;
		pAvatar_spaceUType.properFlags = 8;
		pAvatar_spaceUType.aliasID = 18;
		let Avatar_spaceUType_defval:number = Number("");
		pAvatar_spaceUType.defaultValStr = Avatar_spaceUType_defval;
		pAvatarModule.propertys["spaceUType"] = pAvatar_spaceUType; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_spaceUType.aliasID)] = pAvatar_spaceUType;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(spaceUType / 41001).");

		let pAvatar_state = new Property();
		pAvatar_state.name = "state";
		pAvatar_state.properUtype = 47006;
		pAvatar_state.properFlags = 4;
		pAvatar_state.aliasID = 19;
		let Avatar_state_defval:number = Number("0");
		pAvatar_state.defaultValStr = Avatar_state_defval;
		pAvatarModule.propertys["state"] = pAvatar_state; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_state.aliasID)] = pAvatar_state;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(state / 47006).");

		let pAvatar_subState = new Property();
		pAvatar_subState.name = "subState";
		pAvatar_subState.properUtype = 47007;
		pAvatar_subState.properFlags = 4;
		pAvatar_subState.aliasID = 20;
		let Avatar_subState_defval:number = Number("");
		pAvatar_subState.defaultValStr = Avatar_subState_defval;
		pAvatarModule.propertys["subState"] = pAvatar_subState; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_subState.aliasID)] = pAvatar_subState;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(subState / 47007).");

		let pAvatar_uid = new Property();
		pAvatar_uid.name = "uid";
		pAvatar_uid.properUtype = 41004;
		pAvatar_uid.properFlags = 4;
		pAvatar_uid.aliasID = 21;
		let Avatar_uid_defval:number = Number("0");
		pAvatar_uid.defaultValStr = Avatar_uid_defval;
		pAvatarModule.propertys["uid"] = pAvatar_uid; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_uid.aliasID)] = pAvatar_uid;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(uid / 41004).");

		let pAvatar_utype = new Property();
		pAvatar_utype.name = "utype";
		pAvatar_utype.properUtype = 41005;
		pAvatar_utype.properFlags = 4;
		pAvatar_utype.aliasID = 22;
		let Avatar_utype_defval:number = Number("0");
		pAvatar_utype.defaultValStr = Avatar_utype_defval;
		pAvatarModule.propertys["utype"] = pAvatar_utype; 

		pAvatarModule.usePropertyDescrAlias = true;
		pAvatarModule.idpropertys[DataTypes.NumberUtil.toUInt16(pAvatar_utype.aliasID)] = pAvatar_utype;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), property(utype / 41005).");

		let pAvatar_dialog_addOption_args = new Array<DataTypes.DATATYPE_BASE>();
		pAvatar_dialog_addOption_args.push(EntityDef.id2datatypes[2]);
		pAvatar_dialog_addOption_args.push(EntityDef.id2datatypes[4]);
		pAvatar_dialog_addOption_args.push(EntityDef.id2datatypes[12]);
		pAvatar_dialog_addOption_args.push(EntityDef.id2datatypes[8]);

		let pAvatar_dialog_addOption = new Method();
		pAvatar_dialog_addOption.name = "dialog_addOption";
		pAvatar_dialog_addOption.methodUtype = 10101;
		pAvatar_dialog_addOption.aliasID = 1;
		pAvatar_dialog_addOption.args = pAvatar_dialog_addOption_args;

		pAvatarModule.methods["dialog_addOption"] = pAvatar_dialog_addOption; 
		pAvatarModule.useMethodDescrAlias = true;
		pAvatarModule.idmethods[DataTypes.NumberUtil.toUInt16(pAvatar_dialog_addOption.aliasID)] = pAvatar_dialog_addOption; // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), method(dialog_addOption / 10101).");

		let pAvatar_dialog_close_args = new Array<DataTypes.DATATYPE_BASE>();

		let pAvatar_dialog_close = new Method();
		pAvatar_dialog_close.name = "dialog_close";
		pAvatar_dialog_close.methodUtype = 10104;
		pAvatar_dialog_close.aliasID = 2;
		pAvatar_dialog_close.args = pAvatar_dialog_close_args;

		pAvatarModule.methods["dialog_close"] = pAvatar_dialog_close; 
		pAvatarModule.useMethodDescrAlias = true;
		pAvatarModule.idmethods[DataTypes.NumberUtil.toUInt16(pAvatar_dialog_close.aliasID)] = pAvatar_dialog_close; // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), method(dialog_close / 10104).");

		let pAvatar_dialog_setText_args = new Array<DataTypes.DATATYPE_BASE>();
		pAvatar_dialog_setText_args.push(EntityDef.id2datatypes[12]);
		pAvatar_dialog_setText_args.push(EntityDef.id2datatypes[2]);
		pAvatar_dialog_setText_args.push(EntityDef.id2datatypes[4]);
		pAvatar_dialog_setText_args.push(EntityDef.id2datatypes[12]);

		let pAvatar_dialog_setText = new Method();
		pAvatar_dialog_setText.name = "dialog_setText";
		pAvatar_dialog_setText.methodUtype = 10102;
		pAvatar_dialog_setText.aliasID = 3;
		pAvatar_dialog_setText.args = pAvatar_dialog_setText_args;

		pAvatarModule.methods["dialog_setText"] = pAvatar_dialog_setText; 
		pAvatarModule.useMethodDescrAlias = true;
		pAvatarModule.idmethods[DataTypes.NumberUtil.toUInt16(pAvatar_dialog_setText.aliasID)] = pAvatar_dialog_setText; // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), method(dialog_setText / 10102).");

		let pAvatar_onAddSkill_args = new Array<DataTypes.DATATYPE_BASE>();
		pAvatar_onAddSkill_args.push(EntityDef.id2datatypes[8]);

		let pAvatar_onAddSkill = new Method();
		pAvatar_onAddSkill.name = "onAddSkill";
		pAvatar_onAddSkill.methodUtype = 12;
		pAvatar_onAddSkill.aliasID = 4;
		pAvatar_onAddSkill.args = pAvatar_onAddSkill_args;

		pAvatarModule.methods["onAddSkill"] = pAvatar_onAddSkill; 
		pAvatarModule.useMethodDescrAlias = true;
		pAvatarModule.idmethods[DataTypes.NumberUtil.toUInt16(pAvatar_onAddSkill.aliasID)] = pAvatar_onAddSkill; // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), method(onAddSkill / 12).");

		let pAvatar_onJump_args = new Array<DataTypes.DATATYPE_BASE>();

		let pAvatar_onJump = new Method();
		pAvatar_onJump.name = "onJump";
		pAvatar_onJump.methodUtype = 7;
		pAvatar_onJump.aliasID = 5;
		pAvatar_onJump.args = pAvatar_onJump_args;

		pAvatarModule.methods["onJump"] = pAvatar_onJump; 
		pAvatarModule.useMethodDescrAlias = true;
		pAvatarModule.idmethods[DataTypes.NumberUtil.toUInt16(pAvatar_onJump.aliasID)] = pAvatar_onJump; // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), method(onJump / 7).");

		let pAvatar_onRemoveSkill_args = new Array<DataTypes.DATATYPE_BASE>();
		pAvatar_onRemoveSkill_args.push(EntityDef.id2datatypes[8]);

		let pAvatar_onRemoveSkill = new Method();
		pAvatar_onRemoveSkill.name = "onRemoveSkill";
		pAvatar_onRemoveSkill.methodUtype = 13;
		pAvatar_onRemoveSkill.aliasID = 6;
		pAvatar_onRemoveSkill.args = pAvatar_onRemoveSkill_args;

		pAvatarModule.methods["onRemoveSkill"] = pAvatar_onRemoveSkill; 
		pAvatarModule.useMethodDescrAlias = true;
		pAvatarModule.idmethods[DataTypes.NumberUtil.toUInt16(pAvatar_onRemoveSkill.aliasID)] = pAvatar_onRemoveSkill; // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), method(onRemoveSkill / 13).");

		let pAvatar_recvDamage_args = new Array<DataTypes.DATATYPE_BASE>();
		pAvatar_recvDamage_args.push(EntityDef.id2datatypes[8]);
		pAvatar_recvDamage_args.push(EntityDef.id2datatypes[8]);
		pAvatar_recvDamage_args.push(EntityDef.id2datatypes[8]);
		pAvatar_recvDamage_args.push(EntityDef.id2datatypes[8]);

		let pAvatar_recvDamage = new Method();
		pAvatar_recvDamage.name = "recvDamage";
		pAvatar_recvDamage.methodUtype = 16;
		pAvatar_recvDamage.aliasID = 7;
		pAvatar_recvDamage.args = pAvatar_recvDamage_args;

		pAvatarModule.methods["recvDamage"] = pAvatar_recvDamage; 
		pAvatarModule.useMethodDescrAlias = true;
		pAvatarModule.idmethods[DataTypes.NumberUtil.toUInt16(pAvatar_recvDamage.aliasID)] = pAvatar_recvDamage; // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), method(recvDamage / 16).");

		let pAvatar_dialog_args = new Array<DataTypes.DATATYPE_BASE>();
		pAvatar_dialog_args.push(EntityDef.id2datatypes[8]);
		pAvatar_dialog_args.push(EntityDef.id2datatypes[4]);

		let pAvatar_dialog = new Method();
		pAvatar_dialog.name = "dialog";
		pAvatar_dialog.methodUtype = 11003;
		pAvatar_dialog.aliasID = -1;
		pAvatar_dialog.args = pAvatar_dialog_args;

		pAvatarModule.methods["dialog"] = pAvatar_dialog; 
		pAvatarModule.cellMethods["dialog"] = pAvatar_dialog;

		pAvatarModule.idcellMethods[pAvatar_dialog.methodUtype] = pAvatar_dialog;

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), method(dialog / 11003).");

		let pAvatar_jump_args = new Array<DataTypes.DATATYPE_BASE>();

		let pAvatar_jump = new Method();
		pAvatar_jump.name = "jump";
		pAvatar_jump.methodUtype = 5;
		pAvatar_jump.aliasID = -1;
		pAvatar_jump.args = pAvatar_jump_args;

		pAvatarModule.methods["jump"] = pAvatar_jump; 
		pAvatarModule.cellMethods["jump"] = pAvatar_jump;

		pAvatarModule.idcellMethods[pAvatar_jump.methodUtype] = pAvatar_jump;

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), method(jump / 5).");

		let pAvatar_relive_args = new Array<DataTypes.DATATYPE_BASE>();
		pAvatar_relive_args.push(EntityDef.id2datatypes[2]);

		let pAvatar_relive = new Method();
		pAvatar_relive.name = "relive";
		pAvatar_relive.methodUtype = 4;
		pAvatar_relive.aliasID = -1;
		pAvatar_relive.args = pAvatar_relive_args;

		pAvatarModule.methods["relive"] = pAvatar_relive; 
		pAvatarModule.cellMethods["relive"] = pAvatar_relive;

		pAvatarModule.idcellMethods[pAvatar_relive.methodUtype] = pAvatar_relive;

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), method(relive / 4).");

		let pAvatar_requestPull_args = new Array<DataTypes.DATATYPE_BASE>();

		let pAvatar_requestPull = new Method();
		pAvatar_requestPull.name = "requestPull";
		pAvatar_requestPull.methodUtype = 11;
		pAvatar_requestPull.aliasID = -1;
		pAvatar_requestPull.args = pAvatar_requestPull_args;

		pAvatarModule.methods["requestPull"] = pAvatar_requestPull; 
		pAvatarModule.cellMethods["requestPull"] = pAvatar_requestPull;

		pAvatarModule.idcellMethods[pAvatar_requestPull.methodUtype] = pAvatar_requestPull;

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), method(requestPull / 11).");

		let pAvatar_useTargetSkill_args = new Array<DataTypes.DATATYPE_BASE>();
		pAvatar_useTargetSkill_args.push(EntityDef.id2datatypes[8]);
		pAvatar_useTargetSkill_args.push(EntityDef.id2datatypes[8]);

		let pAvatar_useTargetSkill = new Method();
		pAvatar_useTargetSkill.name = "useTargetSkill";
		pAvatar_useTargetSkill.methodUtype = 11001;
		pAvatar_useTargetSkill.aliasID = -1;
		pAvatar_useTargetSkill.args = pAvatar_useTargetSkill_args;

		pAvatarModule.methods["useTargetSkill"] = pAvatar_useTargetSkill; 
		pAvatarModule.cellMethods["useTargetSkill"] = pAvatar_useTargetSkill;

		pAvatarModule.idcellMethods[pAvatar_useTargetSkill.methodUtype] = pAvatar_useTargetSkill;

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Avatar), method(useTargetSkill / 11001).");

		let pTestModule = new ScriptModule("Test");
		EntityDef.moduledefs["Test"] = pTestModule;
		EntityDef.idmoduledefs[3] = pTestModule;

		let pTest_position = new Property();
		pTest_position.name = "position";
		pTest_position.properUtype = 40000;
		pTest_position.properFlags = 4;
		pTest_position.aliasID = 1;
		let Test_position_defval = new Vector3();
		pTest_position.defaultValStr = Test_position_defval;
		pTestModule.propertys["position"] = pTest_position; 

		pTestModule.usePropertyDescrAlias = true;
		pTestModule.idpropertys[DataTypes.NumberUtil.toUInt16(pTest_position.aliasID)] = pTest_position;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Test), property(position / 40000).");

		let pTest_direction = new Property();
		pTest_direction.name = "direction";
		pTest_direction.properUtype = 40001;
		pTest_direction.properFlags = 4;
		pTest_direction.aliasID = 2;
		let Test_direction_defval = new Vector3();
		pTest_direction.defaultValStr = Test_direction_defval;
		pTestModule.propertys["direction"] = pTest_direction; 

		pTestModule.usePropertyDescrAlias = true;
		pTestModule.idpropertys[DataTypes.NumberUtil.toUInt16(pTest_direction.aliasID)] = pTest_direction;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Test), property(direction / 40001).");

		let pTest_spaceID = new Property();
		pTest_spaceID.name = "spaceID";
		pTest_spaceID.properUtype = 40002;
		pTest_spaceID.properFlags = 16;
		pTest_spaceID.aliasID = 3;
		let Test_spaceID_defval:number = Number("");
		pTest_spaceID.defaultValStr = Test_spaceID_defval;
		pTestModule.propertys["spaceID"] = pTest_spaceID; 

		pTestModule.usePropertyDescrAlias = true;
		pTestModule.idpropertys[DataTypes.NumberUtil.toUInt16(pTest_spaceID.aliasID)] = pTest_spaceID;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Test), property(spaceID / 40002).");

		let pTest_own = new Property();
		pTest_own.name = "own";
		pTest_own.properUtype = 18;
		pTest_own.properFlags = 8;
		pTest_own.aliasID = 4;
		let Test_own_defval:number = Number("1001");
		pTest_own.defaultValStr = Test_own_defval;
		pTestModule.propertys["own"] = pTest_own; 

		pTestModule.usePropertyDescrAlias = true;
		pTestModule.idpropertys[DataTypes.NumberUtil.toUInt16(pTest_own.aliasID)] = pTest_own;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Test), property(own / 18).");

		let pTest_state = new Property();
		pTest_state.name = "state";
		pTest_state.properUtype = 17;
		pTest_state.properFlags = 4;
		pTest_state.aliasID = 5;
		let Test_state_defval:number = Number("100");
		pTest_state.defaultValStr = Test_state_defval;
		pTestModule.propertys["state"] = pTest_state; 

		pTestModule.usePropertyDescrAlias = true;
		pTestModule.idpropertys[DataTypes.NumberUtil.toUInt16(pTest_state.aliasID)] = pTest_state;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Test), property(state / 17).");

		let pTest_helloCB_args = new Array<DataTypes.DATATYPE_BASE>();
		pTest_helloCB_args.push(EntityDef.id2datatypes[8]);

		let pTest_helloCB = new Method();
		pTest_helloCB.name = "helloCB";
		pTest_helloCB.methodUtype = 28;
		pTest_helloCB.aliasID = 1;
		pTest_helloCB.args = pTest_helloCB_args;

		pTestModule.methods["helloCB"] = pTest_helloCB; 
		pTestModule.useMethodDescrAlias = true;
		pTestModule.idmethods[DataTypes.NumberUtil.toUInt16(pTest_helloCB.aliasID)] = pTest_helloCB; // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Test), method(helloCB / 28).");

		let pTest_say_args = new Array<DataTypes.DATATYPE_BASE>();
		pTest_say_args.push(EntityDef.id2datatypes[8]);

		let pTest_say = new Method();
		pTest_say.name = "say";
		pTest_say.methodUtype = 27;
		pTest_say.aliasID = -1;
		pTest_say.args = pTest_say_args;

		pTestModule.methods["say"] = pTest_say; 
		pTestModule.baseMethods["say"] = pTest_say;

		pTestModule.idbaseMethods[pTest_say.methodUtype] = pTest_say;

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Test), method(say / 27).");

		let pTest_hello_args = new Array<DataTypes.DATATYPE_BASE>();
		pTest_hello_args.push(EntityDef.id2datatypes[8]);

		let pTest_hello = new Method();
		pTest_hello.name = "hello";
		pTest_hello.methodUtype = 26;
		pTest_hello.aliasID = -1;
		pTest_hello.args = pTest_hello_args;

		pTestModule.methods["hello"] = pTest_hello; 
		pTestModule.cellMethods["hello"] = pTest_hello;

		pTestModule.idcellMethods[pTest_hello.methodUtype] = pTest_hello;

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Test), method(hello / 26).");

		let pTestNoBaseModule = new ScriptModule("TestNoBase");
		EntityDef.moduledefs["TestNoBase"] = pTestNoBaseModule;
		EntityDef.idmoduledefs[4] = pTestNoBaseModule;

		let pTestNoBase_position = new Property();
		pTestNoBase_position.name = "position";
		pTestNoBase_position.properUtype = 40000;
		pTestNoBase_position.properFlags = 4;
		pTestNoBase_position.aliasID = 1;
		let TestNoBase_position_defval = new Vector3();
		pTestNoBase_position.defaultValStr = TestNoBase_position_defval;
		pTestNoBaseModule.propertys["position"] = pTestNoBase_position; 

		pTestNoBaseModule.usePropertyDescrAlias = true;
		pTestNoBaseModule.idpropertys[DataTypes.NumberUtil.toUInt16(pTestNoBase_position.aliasID)] = pTestNoBase_position;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(TestNoBase), property(position / 40000).");

		let pTestNoBase_direction = new Property();
		pTestNoBase_direction.name = "direction";
		pTestNoBase_direction.properUtype = 40001;
		pTestNoBase_direction.properFlags = 4;
		pTestNoBase_direction.aliasID = 2;
		let TestNoBase_direction_defval = new Vector3();
		pTestNoBase_direction.defaultValStr = TestNoBase_direction_defval;
		pTestNoBaseModule.propertys["direction"] = pTestNoBase_direction; 

		pTestNoBaseModule.usePropertyDescrAlias = true;
		pTestNoBaseModule.idpropertys[DataTypes.NumberUtil.toUInt16(pTestNoBase_direction.aliasID)] = pTestNoBase_direction;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(TestNoBase), property(direction / 40001).");

		let pTestNoBase_spaceID = new Property();
		pTestNoBase_spaceID.name = "spaceID";
		pTestNoBase_spaceID.properUtype = 40002;
		pTestNoBase_spaceID.properFlags = 16;
		pTestNoBase_spaceID.aliasID = 3;
		let TestNoBase_spaceID_defval:number = Number("");
		pTestNoBase_spaceID.defaultValStr = TestNoBase_spaceID_defval;
		pTestNoBaseModule.propertys["spaceID"] = pTestNoBase_spaceID; 

		pTestNoBaseModule.usePropertyDescrAlias = true;
		pTestNoBaseModule.idpropertys[DataTypes.NumberUtil.toUInt16(pTestNoBase_spaceID.aliasID)] = pTestNoBase_spaceID;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(TestNoBase), property(spaceID / 40002).");

		let pTestNoBase_own = new Property();
		pTestNoBase_own.name = "own";
		pTestNoBase_own.properUtype = 24;
		pTestNoBase_own.properFlags = 8;
		pTestNoBase_own.aliasID = 4;
		let TestNoBase_own_defval:number = Number("1001");
		pTestNoBase_own.defaultValStr = TestNoBase_own_defval;
		pTestNoBaseModule.propertys["own"] = pTestNoBase_own; 

		pTestNoBaseModule.usePropertyDescrAlias = true;
		pTestNoBaseModule.idpropertys[DataTypes.NumberUtil.toUInt16(pTestNoBase_own.aliasID)] = pTestNoBase_own;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(TestNoBase), property(own / 24).");

		let pTestNoBase_state = new Property();
		pTestNoBase_state.name = "state";
		pTestNoBase_state.properUtype = 23;
		pTestNoBase_state.properFlags = 4;
		pTestNoBase_state.aliasID = 5;
		let TestNoBase_state_defval:number = Number("100");
		pTestNoBase_state.defaultValStr = TestNoBase_state_defval;
		pTestNoBaseModule.propertys["state"] = pTestNoBase_state; 

		pTestNoBaseModule.usePropertyDescrAlias = true;
		pTestNoBaseModule.idpropertys[DataTypes.NumberUtil.toUInt16(pTestNoBase_state.aliasID)] = pTestNoBase_state;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(TestNoBase), property(state / 23).");

		let pTestNoBase_helloCB_args = new Array<DataTypes.DATATYPE_BASE>();
		pTestNoBase_helloCB_args.push(EntityDef.id2datatypes[8]);

		let pTestNoBase_helloCB = new Method();
		pTestNoBase_helloCB.name = "helloCB";
		pTestNoBase_helloCB.methodUtype = 30;
		pTestNoBase_helloCB.aliasID = 1;
		pTestNoBase_helloCB.args = pTestNoBase_helloCB_args;

		pTestNoBaseModule.methods["helloCB"] = pTestNoBase_helloCB; 
		pTestNoBaseModule.useMethodDescrAlias = true;
		pTestNoBaseModule.idmethods[DataTypes.NumberUtil.toUInt16(pTestNoBase_helloCB.aliasID)] = pTestNoBase_helloCB; // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(TestNoBase), method(helloCB / 30).");

		let pTestNoBase_hello_args = new Array<DataTypes.DATATYPE_BASE>();
		pTestNoBase_hello_args.push(EntityDef.id2datatypes[8]);

		let pTestNoBase_hello = new Method();
		pTestNoBase_hello.name = "hello";
		pTestNoBase_hello.methodUtype = 29;
		pTestNoBase_hello.aliasID = -1;
		pTestNoBase_hello.args = pTestNoBase_hello_args;

		pTestNoBaseModule.methods["hello"] = pTestNoBase_hello; 
		pTestNoBaseModule.cellMethods["hello"] = pTestNoBase_hello;

		pTestNoBaseModule.idcellMethods[pTestNoBase_hello.methodUtype] = pTestNoBase_hello;

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(TestNoBase), method(hello / 29).");

		let pMonsterModule = new ScriptModule("Monster");
		EntityDef.moduledefs["Monster"] = pMonsterModule;
		EntityDef.idmoduledefs[5] = pMonsterModule;

		let pMonster_position = new Property();
		pMonster_position.name = "position";
		pMonster_position.properUtype = 40000;
		pMonster_position.properFlags = 4;
		pMonster_position.aliasID = 1;
		let Monster_position_defval = new Vector3();
		pMonster_position.defaultValStr = Monster_position_defval;
		pMonsterModule.propertys["position"] = pMonster_position; 

		pMonsterModule.usePropertyDescrAlias = true;
		pMonsterModule.idpropertys[DataTypes.NumberUtil.toUInt16(pMonster_position.aliasID)] = pMonster_position;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Monster), property(position / 40000).");

		let pMonster_direction = new Property();
		pMonster_direction.name = "direction";
		pMonster_direction.properUtype = 40001;
		pMonster_direction.properFlags = 4;
		pMonster_direction.aliasID = 2;
		let Monster_direction_defval = new Vector3();
		pMonster_direction.defaultValStr = Monster_direction_defval;
		pMonsterModule.propertys["direction"] = pMonster_direction; 

		pMonsterModule.usePropertyDescrAlias = true;
		pMonsterModule.idpropertys[DataTypes.NumberUtil.toUInt16(pMonster_direction.aliasID)] = pMonster_direction;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Monster), property(direction / 40001).");

		let pMonster_spaceID = new Property();
		pMonster_spaceID.name = "spaceID";
		pMonster_spaceID.properUtype = 40002;
		pMonster_spaceID.properFlags = 16;
		pMonster_spaceID.aliasID = 3;
		let Monster_spaceID_defval:number = Number("");
		pMonster_spaceID.defaultValStr = Monster_spaceID_defval;
		pMonsterModule.propertys["spaceID"] = pMonster_spaceID; 

		pMonsterModule.usePropertyDescrAlias = true;
		pMonsterModule.idpropertys[DataTypes.NumberUtil.toUInt16(pMonster_spaceID.aliasID)] = pMonster_spaceID;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Monster), property(spaceID / 40002).");

		let pMonster_HP = new Property();
		pMonster_HP.name = "HP";
		pMonster_HP.properUtype = 47001;
		pMonster_HP.properFlags = 4;
		pMonster_HP.aliasID = 4;
		let Monster_HP_defval:number = Number("0");
		pMonster_HP.defaultValStr = Monster_HP_defval;
		pMonsterModule.propertys["HP"] = pMonster_HP; 

		pMonsterModule.usePropertyDescrAlias = true;
		pMonsterModule.idpropertys[DataTypes.NumberUtil.toUInt16(pMonster_HP.aliasID)] = pMonster_HP;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Monster), property(HP / 47001).");

		let pMonster_HP_Max = new Property();
		pMonster_HP_Max.name = "HP_Max";
		pMonster_HP_Max.properUtype = 47002;
		pMonster_HP_Max.properFlags = 4;
		pMonster_HP_Max.aliasID = 5;
		let Monster_HP_Max_defval:number = Number("0");
		pMonster_HP_Max.defaultValStr = Monster_HP_Max_defval;
		pMonsterModule.propertys["HP_Max"] = pMonster_HP_Max; 

		pMonsterModule.usePropertyDescrAlias = true;
		pMonsterModule.idpropertys[DataTypes.NumberUtil.toUInt16(pMonster_HP_Max.aliasID)] = pMonster_HP_Max;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Monster), property(HP_Max / 47002).");

		let pMonster_MP = new Property();
		pMonster_MP.name = "MP";
		pMonster_MP.properUtype = 47003;
		pMonster_MP.properFlags = 4;
		pMonster_MP.aliasID = 6;
		let Monster_MP_defval:number = Number("0");
		pMonster_MP.defaultValStr = Monster_MP_defval;
		pMonsterModule.propertys["MP"] = pMonster_MP; 

		pMonsterModule.usePropertyDescrAlias = true;
		pMonsterModule.idpropertys[DataTypes.NumberUtil.toUInt16(pMonster_MP.aliasID)] = pMonster_MP;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Monster), property(MP / 47003).");

		let pMonster_MP_Max = new Property();
		pMonster_MP_Max.name = "MP_Max";
		pMonster_MP_Max.properUtype = 47004;
		pMonster_MP_Max.properFlags = 4;
		pMonster_MP_Max.aliasID = 7;
		let Monster_MP_Max_defval:number = Number("0");
		pMonster_MP_Max.defaultValStr = Monster_MP_Max_defval;
		pMonsterModule.propertys["MP_Max"] = pMonster_MP_Max; 

		pMonsterModule.usePropertyDescrAlias = true;
		pMonsterModule.idpropertys[DataTypes.NumberUtil.toUInt16(pMonster_MP_Max.aliasID)] = pMonster_MP_Max;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Monster), property(MP_Max / 47004).");

		let pMonster_entityNO = new Property();
		pMonster_entityNO.name = "entityNO";
		pMonster_entityNO.properUtype = 51007;
		pMonster_entityNO.properFlags = 4;
		pMonster_entityNO.aliasID = 8;
		let Monster_entityNO_defval:number = Number("0");
		pMonster_entityNO.defaultValStr = Monster_entityNO_defval;
		pMonsterModule.propertys["entityNO"] = pMonster_entityNO; 

		pMonsterModule.usePropertyDescrAlias = true;
		pMonsterModule.idpropertys[DataTypes.NumberUtil.toUInt16(pMonster_entityNO.aliasID)] = pMonster_entityNO;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Monster), property(entityNO / 51007).");

		let pMonster_forbids = new Property();
		pMonster_forbids.name = "forbids";
		pMonster_forbids.properUtype = 47005;
		pMonster_forbids.properFlags = 4;
		pMonster_forbids.aliasID = 9;
		let Monster_forbids_defval:number = Number("0");
		pMonster_forbids.defaultValStr = Monster_forbids_defval;
		pMonsterModule.propertys["forbids"] = pMonster_forbids; 

		pMonsterModule.usePropertyDescrAlias = true;
		pMonsterModule.idpropertys[DataTypes.NumberUtil.toUInt16(pMonster_forbids.aliasID)] = pMonster_forbids;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Monster), property(forbids / 47005).");

		let pMonster_modelID = new Property();
		pMonster_modelID.name = "modelID";
		pMonster_modelID.properUtype = 41006;
		pMonster_modelID.properFlags = 4;
		pMonster_modelID.aliasID = 10;
		let Monster_modelID_defval:number = Number("0");
		pMonster_modelID.defaultValStr = Monster_modelID_defval;
		pMonsterModule.propertys["modelID"] = pMonster_modelID; 

		pMonsterModule.usePropertyDescrAlias = true;
		pMonsterModule.idpropertys[DataTypes.NumberUtil.toUInt16(pMonster_modelID.aliasID)] = pMonster_modelID;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Monster), property(modelID / 41006).");

		let pMonster_modelScale = new Property();
		pMonster_modelScale.name = "modelScale";
		pMonster_modelScale.properUtype = 41007;
		pMonster_modelScale.properFlags = 4;
		pMonster_modelScale.aliasID = 11;
		let Monster_modelScale_defval:number = Number("30");
		pMonster_modelScale.defaultValStr = Monster_modelScale_defval;
		pMonsterModule.propertys["modelScale"] = pMonster_modelScale; 

		pMonsterModule.usePropertyDescrAlias = true;
		pMonsterModule.idpropertys[DataTypes.NumberUtil.toUInt16(pMonster_modelScale.aliasID)] = pMonster_modelScale;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Monster), property(modelScale / 41007).");

		let pMonster_moveSpeed = new Property();
		pMonster_moveSpeed.name = "moveSpeed";
		pMonster_moveSpeed.properUtype = 32;
		pMonster_moveSpeed.properFlags = 4;
		pMonster_moveSpeed.aliasID = 12;
		let Monster_moveSpeed_defval:number = Number("50");
		pMonster_moveSpeed.defaultValStr = Monster_moveSpeed_defval;
		pMonsterModule.propertys["moveSpeed"] = pMonster_moveSpeed; 

		pMonsterModule.usePropertyDescrAlias = true;
		pMonsterModule.idpropertys[DataTypes.NumberUtil.toUInt16(pMonster_moveSpeed.aliasID)] = pMonster_moveSpeed;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Monster), property(moveSpeed / 32).");

		let pMonster_name = new Property();
		pMonster_name.name = "name";
		pMonster_name.properUtype = 41003;
		pMonster_name.properFlags = 4;
		pMonster_name.aliasID = 13;
		let Monster_name_defval = "";
		pMonster_name.defaultValStr = Monster_name_defval;
		pMonsterModule.propertys["name"] = pMonster_name; 

		pMonsterModule.usePropertyDescrAlias = true;
		pMonsterModule.idpropertys[DataTypes.NumberUtil.toUInt16(pMonster_name.aliasID)] = pMonster_name;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Monster), property(name / 41003).");

		let pMonster_state = new Property();
		pMonster_state.name = "state";
		pMonster_state.properUtype = 47006;
		pMonster_state.properFlags = 4;
		pMonster_state.aliasID = 14;
		let Monster_state_defval:number = Number("0");
		pMonster_state.defaultValStr = Monster_state_defval;
		pMonsterModule.propertys["state"] = pMonster_state; 

		pMonsterModule.usePropertyDescrAlias = true;
		pMonsterModule.idpropertys[DataTypes.NumberUtil.toUInt16(pMonster_state.aliasID)] = pMonster_state;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Monster), property(state / 47006).");

		let pMonster_subState = new Property();
		pMonster_subState.name = "subState";
		pMonster_subState.properUtype = 47007;
		pMonster_subState.properFlags = 4;
		pMonster_subState.aliasID = 15;
		let Monster_subState_defval:number = Number("");
		pMonster_subState.defaultValStr = Monster_subState_defval;
		pMonsterModule.propertys["subState"] = pMonster_subState; 

		pMonsterModule.usePropertyDescrAlias = true;
		pMonsterModule.idpropertys[DataTypes.NumberUtil.toUInt16(pMonster_subState.aliasID)] = pMonster_subState;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Monster), property(subState / 47007).");

		let pMonster_uid = new Property();
		pMonster_uid.name = "uid";
		pMonster_uid.properUtype = 41004;
		pMonster_uid.properFlags = 4;
		pMonster_uid.aliasID = 16;
		let Monster_uid_defval:number = Number("0");
		pMonster_uid.defaultValStr = Monster_uid_defval;
		pMonsterModule.propertys["uid"] = pMonster_uid; 

		pMonsterModule.usePropertyDescrAlias = true;
		pMonsterModule.idpropertys[DataTypes.NumberUtil.toUInt16(pMonster_uid.aliasID)] = pMonster_uid;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Monster), property(uid / 41004).");

		let pMonster_utype = new Property();
		pMonster_utype.name = "utype";
		pMonster_utype.properUtype = 41005;
		pMonster_utype.properFlags = 4;
		pMonster_utype.aliasID = 17;
		let Monster_utype_defval:number = Number("0");
		pMonster_utype.defaultValStr = Monster_utype_defval;
		pMonsterModule.propertys["utype"] = pMonster_utype; 

		pMonsterModule.usePropertyDescrAlias = true;
		pMonsterModule.idpropertys[DataTypes.NumberUtil.toUInt16(pMonster_utype.aliasID)] = pMonster_utype;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Monster), property(utype / 41005).");

		let pMonster_recvDamage_args = new Array<DataTypes.DATATYPE_BASE>();
		pMonster_recvDamage_args.push(EntityDef.id2datatypes[8]);
		pMonster_recvDamage_args.push(EntityDef.id2datatypes[8]);
		pMonster_recvDamage_args.push(EntityDef.id2datatypes[8]);
		pMonster_recvDamage_args.push(EntityDef.id2datatypes[8]);

		let pMonster_recvDamage = new Method();
		pMonster_recvDamage.name = "recvDamage";
		pMonster_recvDamage.methodUtype = 34;
		pMonster_recvDamage.aliasID = 1;
		pMonster_recvDamage.args = pMonster_recvDamage_args;

		pMonsterModule.methods["recvDamage"] = pMonster_recvDamage; 
		pMonsterModule.useMethodDescrAlias = true;
		pMonsterModule.idmethods[DataTypes.NumberUtil.toUInt16(pMonster_recvDamage.aliasID)] = pMonster_recvDamage; // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Monster), method(recvDamage / 34).");

		let pNPCModule = new ScriptModule("NPC");
		EntityDef.moduledefs["NPC"] = pNPCModule;
		EntityDef.idmoduledefs[6] = pNPCModule;

		let pNPC_position = new Property();
		pNPC_position.name = "position";
		pNPC_position.properUtype = 40000;
		pNPC_position.properFlags = 4;
		pNPC_position.aliasID = 1;
		let NPC_position_defval = new Vector3();
		pNPC_position.defaultValStr = NPC_position_defval;
		pNPCModule.propertys["position"] = pNPC_position; 

		pNPCModule.usePropertyDescrAlias = true;
		pNPCModule.idpropertys[DataTypes.NumberUtil.toUInt16(pNPC_position.aliasID)] = pNPC_position;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(NPC), property(position / 40000).");

		let pNPC_direction = new Property();
		pNPC_direction.name = "direction";
		pNPC_direction.properUtype = 40001;
		pNPC_direction.properFlags = 4;
		pNPC_direction.aliasID = 2;
		let NPC_direction_defval = new Vector3();
		pNPC_direction.defaultValStr = NPC_direction_defval;
		pNPCModule.propertys["direction"] = pNPC_direction; 

		pNPCModule.usePropertyDescrAlias = true;
		pNPCModule.idpropertys[DataTypes.NumberUtil.toUInt16(pNPC_direction.aliasID)] = pNPC_direction;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(NPC), property(direction / 40001).");

		let pNPC_spaceID = new Property();
		pNPC_spaceID.name = "spaceID";
		pNPC_spaceID.properUtype = 40002;
		pNPC_spaceID.properFlags = 16;
		pNPC_spaceID.aliasID = 3;
		let NPC_spaceID_defval:number = Number("");
		pNPC_spaceID.defaultValStr = NPC_spaceID_defval;
		pNPCModule.propertys["spaceID"] = pNPC_spaceID; 

		pNPCModule.usePropertyDescrAlias = true;
		pNPCModule.idpropertys[DataTypes.NumberUtil.toUInt16(pNPC_spaceID.aliasID)] = pNPC_spaceID;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(NPC), property(spaceID / 40002).");

		let pNPC_entityNO = new Property();
		pNPC_entityNO.name = "entityNO";
		pNPC_entityNO.properUtype = 51007;
		pNPC_entityNO.properFlags = 4;
		pNPC_entityNO.aliasID = 4;
		let NPC_entityNO_defval:number = Number("0");
		pNPC_entityNO.defaultValStr = NPC_entityNO_defval;
		pNPCModule.propertys["entityNO"] = pNPC_entityNO; 

		pNPCModule.usePropertyDescrAlias = true;
		pNPCModule.idpropertys[DataTypes.NumberUtil.toUInt16(pNPC_entityNO.aliasID)] = pNPC_entityNO;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(NPC), property(entityNO / 51007).");

		let pNPC_modelID = new Property();
		pNPC_modelID.name = "modelID";
		pNPC_modelID.properUtype = 41006;
		pNPC_modelID.properFlags = 4;
		pNPC_modelID.aliasID = 5;
		let NPC_modelID_defval:number = Number("0");
		pNPC_modelID.defaultValStr = NPC_modelID_defval;
		pNPCModule.propertys["modelID"] = pNPC_modelID; 

		pNPCModule.usePropertyDescrAlias = true;
		pNPCModule.idpropertys[DataTypes.NumberUtil.toUInt16(pNPC_modelID.aliasID)] = pNPC_modelID;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(NPC), property(modelID / 41006).");

		let pNPC_modelScale = new Property();
		pNPC_modelScale.name = "modelScale";
		pNPC_modelScale.properUtype = 41007;
		pNPC_modelScale.properFlags = 4;
		pNPC_modelScale.aliasID = 6;
		let NPC_modelScale_defval:number = Number("30");
		pNPC_modelScale.defaultValStr = NPC_modelScale_defval;
		pNPCModule.propertys["modelScale"] = pNPC_modelScale; 

		pNPCModule.usePropertyDescrAlias = true;
		pNPCModule.idpropertys[DataTypes.NumberUtil.toUInt16(pNPC_modelScale.aliasID)] = pNPC_modelScale;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(NPC), property(modelScale / 41007).");

		let pNPC_moveSpeed = new Property();
		pNPC_moveSpeed.name = "moveSpeed";
		pNPC_moveSpeed.properUtype = 43;
		pNPC_moveSpeed.properFlags = 4;
		pNPC_moveSpeed.aliasID = 7;
		let NPC_moveSpeed_defval:number = Number("50");
		pNPC_moveSpeed.defaultValStr = NPC_moveSpeed_defval;
		pNPCModule.propertys["moveSpeed"] = pNPC_moveSpeed; 

		pNPCModule.usePropertyDescrAlias = true;
		pNPCModule.idpropertys[DataTypes.NumberUtil.toUInt16(pNPC_moveSpeed.aliasID)] = pNPC_moveSpeed;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(NPC), property(moveSpeed / 43).");

		let pNPC_name = new Property();
		pNPC_name.name = "name";
		pNPC_name.properUtype = 41003;
		pNPC_name.properFlags = 4;
		pNPC_name.aliasID = 8;
		let NPC_name_defval = "";
		pNPC_name.defaultValStr = NPC_name_defval;
		pNPCModule.propertys["name"] = pNPC_name; 

		pNPCModule.usePropertyDescrAlias = true;
		pNPCModule.idpropertys[DataTypes.NumberUtil.toUInt16(pNPC_name.aliasID)] = pNPC_name;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(NPC), property(name / 41003).");

		let pNPC_uid = new Property();
		pNPC_uid.name = "uid";
		pNPC_uid.properUtype = 41004;
		pNPC_uid.properFlags = 4;
		pNPC_uid.aliasID = 9;
		let NPC_uid_defval:number = Number("0");
		pNPC_uid.defaultValStr = NPC_uid_defval;
		pNPCModule.propertys["uid"] = pNPC_uid; 

		pNPCModule.usePropertyDescrAlias = true;
		pNPCModule.idpropertys[DataTypes.NumberUtil.toUInt16(pNPC_uid.aliasID)] = pNPC_uid;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(NPC), property(uid / 41004).");

		let pNPC_utype = new Property();
		pNPC_utype.name = "utype";
		pNPC_utype.properUtype = 41005;
		pNPC_utype.properFlags = 4;
		pNPC_utype.aliasID = 10;
		let NPC_utype_defval:number = Number("0");
		pNPC_utype.defaultValStr = NPC_utype_defval;
		pNPCModule.propertys["utype"] = pNPC_utype; 

		pNPCModule.usePropertyDescrAlias = true;
		pNPCModule.idpropertys[DataTypes.NumberUtil.toUInt16(pNPC_utype.aliasID)] = pNPC_utype;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(NPC), property(utype / 41005).");

		pNPCModule.useMethodDescrAlias = true;
		let pGateModule = new ScriptModule("Gate");
		EntityDef.moduledefs["Gate"] = pGateModule;
		EntityDef.idmoduledefs[7] = pGateModule;

		let pGate_position = new Property();
		pGate_position.name = "position";
		pGate_position.properUtype = 40000;
		pGate_position.properFlags = 4;
		pGate_position.aliasID = 1;
		let Gate_position_defval = new Vector3();
		pGate_position.defaultValStr = Gate_position_defval;
		pGateModule.propertys["position"] = pGate_position; 

		pGateModule.usePropertyDescrAlias = true;
		pGateModule.idpropertys[DataTypes.NumberUtil.toUInt16(pGate_position.aliasID)] = pGate_position;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Gate), property(position / 40000).");

		let pGate_direction = new Property();
		pGate_direction.name = "direction";
		pGate_direction.properUtype = 40001;
		pGate_direction.properFlags = 4;
		pGate_direction.aliasID = 2;
		let Gate_direction_defval = new Vector3();
		pGate_direction.defaultValStr = Gate_direction_defval;
		pGateModule.propertys["direction"] = pGate_direction; 

		pGateModule.usePropertyDescrAlias = true;
		pGateModule.idpropertys[DataTypes.NumberUtil.toUInt16(pGate_direction.aliasID)] = pGate_direction;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Gate), property(direction / 40001).");

		let pGate_spaceID = new Property();
		pGate_spaceID.name = "spaceID";
		pGate_spaceID.properUtype = 40002;
		pGate_spaceID.properFlags = 16;
		pGate_spaceID.aliasID = 3;
		let Gate_spaceID_defval:number = Number("");
		pGate_spaceID.defaultValStr = Gate_spaceID_defval;
		pGateModule.propertys["spaceID"] = pGate_spaceID; 

		pGateModule.usePropertyDescrAlias = true;
		pGateModule.idpropertys[DataTypes.NumberUtil.toUInt16(pGate_spaceID.aliasID)] = pGate_spaceID;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Gate), property(spaceID / 40002).");

		let pGate_entityNO = new Property();
		pGate_entityNO.name = "entityNO";
		pGate_entityNO.properUtype = 51007;
		pGate_entityNO.properFlags = 4;
		pGate_entityNO.aliasID = 4;
		let Gate_entityNO_defval:number = Number("0");
		pGate_entityNO.defaultValStr = Gate_entityNO_defval;
		pGateModule.propertys["entityNO"] = pGate_entityNO; 

		pGateModule.usePropertyDescrAlias = true;
		pGateModule.idpropertys[DataTypes.NumberUtil.toUInt16(pGate_entityNO.aliasID)] = pGate_entityNO;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Gate), property(entityNO / 51007).");

		let pGate_modelID = new Property();
		pGate_modelID.name = "modelID";
		pGate_modelID.properUtype = 41006;
		pGate_modelID.properFlags = 4;
		pGate_modelID.aliasID = 5;
		let Gate_modelID_defval:number = Number("0");
		pGate_modelID.defaultValStr = Gate_modelID_defval;
		pGateModule.propertys["modelID"] = pGate_modelID; 

		pGateModule.usePropertyDescrAlias = true;
		pGateModule.idpropertys[DataTypes.NumberUtil.toUInt16(pGate_modelID.aliasID)] = pGate_modelID;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Gate), property(modelID / 41006).");

		let pGate_modelScale = new Property();
		pGate_modelScale.name = "modelScale";
		pGate_modelScale.properUtype = 41007;
		pGate_modelScale.properFlags = 4;
		pGate_modelScale.aliasID = 6;
		let Gate_modelScale_defval:number = Number("30");
		pGate_modelScale.defaultValStr = Gate_modelScale_defval;
		pGateModule.propertys["modelScale"] = pGate_modelScale; 

		pGateModule.usePropertyDescrAlias = true;
		pGateModule.idpropertys[DataTypes.NumberUtil.toUInt16(pGate_modelScale.aliasID)] = pGate_modelScale;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Gate), property(modelScale / 41007).");

		let pGate_name = new Property();
		pGate_name.name = "name";
		pGate_name.properUtype = 41003;
		pGate_name.properFlags = 4;
		pGate_name.aliasID = 7;
		let Gate_name_defval = "";
		pGate_name.defaultValStr = Gate_name_defval;
		pGateModule.propertys["name"] = pGate_name; 

		pGateModule.usePropertyDescrAlias = true;
		pGateModule.idpropertys[DataTypes.NumberUtil.toUInt16(pGate_name.aliasID)] = pGate_name;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Gate), property(name / 41003).");

		let pGate_uid = new Property();
		pGate_uid.name = "uid";
		pGate_uid.properUtype = 41004;
		pGate_uid.properFlags = 4;
		pGate_uid.aliasID = 8;
		let Gate_uid_defval:number = Number("0");
		pGate_uid.defaultValStr = Gate_uid_defval;
		pGateModule.propertys["uid"] = pGate_uid; 

		pGateModule.usePropertyDescrAlias = true;
		pGateModule.idpropertys[DataTypes.NumberUtil.toUInt16(pGate_uid.aliasID)] = pGate_uid;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Gate), property(uid / 41004).");

		let pGate_utype = new Property();
		pGate_utype.name = "utype";
		pGate_utype.properUtype = 41005;
		pGate_utype.properFlags = 4;
		pGate_utype.aliasID = 9;
		let Gate_utype_defval:number = Number("0");
		pGate_utype.defaultValStr = Gate_utype_defval;
		pGateModule.propertys["utype"] = pGate_utype; 

		pGateModule.usePropertyDescrAlias = true;
		pGateModule.idpropertys[DataTypes.NumberUtil.toUInt16(pGate_utype.aliasID)] = pGate_utype;  // 可能需要转(UInt16)

		//Dbg.DEBUG_MSG("EntityDef::initScriptModules: add(Gate), property(utype / 41005).");

		pGateModule.useMethodDescrAlias = true;
	}

	public static initDefTypes() {
		{
			let utype = 2;
			let typeName = "ENTITY_SUBSTATE";
			let name = "UINT8";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 3;
			let typeName = "UINT16";
			let name = "UINT16";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 5;
			let typeName = "UID";
			let name = "UINT64";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 4;
			let typeName = "ENTITY_UTYPE";
			let name = "UINT32";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 6;
			let typeName = "ENTITY_STATE";
			let name = "INT8";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 7;
			let typeName = "INT16";
			let name = "INT16";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 8;
			let typeName = "ENTITY_FORBIDS";
			let name = "INT32";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 9;
			let typeName = "INT64";
			let name = "INT64";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 1;
			let typeName = "STRING";
			let name = "STRING";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 12;
			let typeName = "UNICODE";
			let name = "UNICODE";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 13;
			let typeName = "FLOAT";
			let name = "FLOAT";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 14;
			let typeName = "DOUBLE";
			let name = "DOUBLE";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 10;
			let typeName = "UID1";
			let name = "PYTHON";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 10;
			let typeName = "PY_DICT";
			let name = "PY_DICT";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 10;
			let typeName = "PY_TUPLE";
			let name = "PY_TUPLE";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 10;
			let typeName = "PY_LIST";
			let name = "PY_LIST";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 20;
			let typeName = "ENTITYCALL";
			let name = "ENTITYCALL";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 11;
			let typeName = "BLOB";
			let name = "BLOB";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 15;
			let typeName = "VECTOR2";
			let name = "VECTOR2";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 16;
			let typeName = "DIRECTION3D";
			let name = "VECTOR3";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 17;
			let typeName = "VECTOR4";
			let name = "VECTOR4";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 22;
			let typeName = "ENTITY_FORBID_COUNTER";
			let datatype = new KBETypes.DATATYPE_ENTITY_FORBID_COUNTER();
			EntityDef.datatypes.set(typeName, datatype);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 23;
			let typeName = "ENTITYID_LIST";
			let datatype = new KBETypes.DATATYPE_ENTITYID_LIST();
			EntityDef.datatypes.set(typeName, datatype);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 24;
			let typeName = "AVATAR_DATA";
			let datatype = new KBETypes.DATATYPE_AVATAR_DATA();
			EntityDef.datatypes.set(typeName, datatype);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 25;
			let typeName = "AVATAR_INFOS";
			let datatype = new KBETypes.DATATYPE_AVATAR_INFOS();
			EntityDef.datatypes.set(typeName, datatype);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 26;
			let typeName = "AVATAR_INFOS_LIST";
			let datatype = new KBETypes.DATATYPE_AVATAR_INFOS_LIST();
			EntityDef.datatypes.set(typeName, datatype);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 28;
			let typeName = "BAG";
			let datatype = new KBETypes.DATATYPE_BAG();
			EntityDef.datatypes.set(typeName, datatype);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 31;
			let typeName = "EXAMPLES";
			let datatype = new KBETypes.DATATYPE_EXAMPLES();
			EntityDef.datatypes.set(typeName, datatype);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 32;
			let typeName = "AnonymousArray_32";
			let datatype = new KBETypes.DATATYPE_AnonymousArray_32();
			EntityDef.datatypes.set(typeName, datatype);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 33;
			let typeName = "AnonymousArray_33";
			let name = "ENTITY_COMPONENT";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 34;
			let typeName = "AnonymousArray_34";
			let name = "ENTITY_COMPONENT";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}

		{
			let utype = 35;
			let typeName = "AnonymousArray_35";
			let name = "ENTITY_COMPONENT";
			let val = EntityDef.datatypes.get(name);
			EntityDef.datatypes.set(typeName, val);
			EntityDef.id2datatypes[utype] = EntityDef.datatypes.get(typeName);
			EntityDef.datatype2id[typeName] = utype;
		}


		for (let datatypeStr of EntityDef.datatypes.keys()) {
            let dataType = EntityDef.datatypes.get(datatypeStr);
            if (dataType != null) {
                dataType.Bind();
            }
        }
	}


}